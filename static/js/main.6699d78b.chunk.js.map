{"version":3,"sources":["store/chat.js","components/Message.js","components/MessageList.js","components/Form.js","components/Person.js","components/PersonLinkWrapper.js","components/PersonSwitcher.js","App.js","reportWebVitals.js","index.js"],"names":["subject","Subject","initialState","data","newDataCount","state","chatStore","init","next","subscribe","setState","sendMessage","message","clearChat","Message","person","text","console","log","className","React","memo","MessageList","type","useState","chatState","setChatState","useLayoutEffect","subs","unsubscribe","map","index","Form","formRef","useRef","ref","id","onSubmit","e","preventDefault","messageObject","String","target","elements","messageInput","value","trim","current","reset","name","placeholder","required","onClick","Person","PersonLinkWrapper","children","location","to","PersonSwitcher","useLocation","pathname","split","useEffect","messageNotification","length","firstPersion","App","path","component","props","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6699d78b.chunk.js","sourcesContent":["import { Subject } from \"rxjs\";\n\nconst subject = new Subject();\n\nconst initialState = {\n  data: [],\n  newDataCount: 0,\n};\n\nlet state = initialState;\n\nconst chatStore = {\n  init: () => subject.next(state),\n\n  subscribe: (setState) => subject.subscribe(setState),\n\n  sendMessage: message => {\n    state = {\n      ...state,\n      data: [...state.data, message],\n      newDataCount: state.newDataCount + 1\n     };\n     subject.next(state);\n  },\n  clearChat: () => {\n    state = initialState;\n    subject.next(state);\n  },\n  initialState,\n\n};\n\nexport default chatStore;","import React from \"react\";\n\nconst Message = ({ message: { person, text } }) => (\n  <div> \n    {console.log('Message item rendered: '+text)}\n    <p className={person}>{text}</p>\n    <div className=\"clear\"></div>\n  </div>\n);\n\nexport default React.memo(Message);\n","import React, { useState, useLayoutEffect } from \"react\";\nimport chatStore from \"../store/chat\";\nimport Message from \"./Message\"; \nconst MessageList = ({ type }) => {\n  const [chatState, setChatState] = useState(chatStore.initialState);\n\n  useLayoutEffect(() => {\n    const subs = chatStore.subscribe(setChatState);\n    chatStore.init();\n\n    return () => subs.unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"chat-box\">\n      {console.log(type + \" chat-box rendered\")}\n      {chatState.data.map((message, index) => (\n        <Message message={message} key={message.text + index} />\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(MessageList);\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport chatStore from \"../store/chat\"; \n\nconst Form = ({ type }) => {\n  const [, setChatState] = useState(chatStore.initialState);\n\n  const formRef = useRef(<form />);\n\n  useLayoutEffect(() => {\n    const subs = chatStore.subscribe(setChatState);\n    chatStore.init();\n\n    return () => subs.unsubscribe();\n  }, []);\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    const messageObject = {\n      person: String(type),\n      text: e.target.elements.messageInput.value.trim(),\n    };\n    chatStore.sendMessage(messageObject);\n    formRef.current?.reset();\n  }; \n  return (\n    <>\n      <form ref={formRef} id=\"messageForm\" onSubmit={onFormSubmit}>\n        <input\n          type=\"text\"\n          id=\"messageInput\"\n          name=\"messageInput\"\n          placeholder=\"type here...\"\n          required\n        />\n        <button type=\"submit\">Send</button> <br />\n      </form>\n      <button className=\"clear-button\" onClick={chatStore.clearChat}>\n        Clear Chat\n      </button>\n    </>\n  );\n};\n\nexport default React.memo(Form);\n","import React from \"react\"; \nimport MessageList from \"./MessageList\";\nimport Form from \"./Form\";\nconst Person = ({ type }) => { \n\n  return (\n    <div className=\"container\">\n      {console.log(type + \" Person rendered\")}\n      <h2>Messages:</h2>\n      <MessageList type={type} />\n      <Form type={type} />\n    </div>\n  );\n};\n\nexport default React.memo(Person);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst PersonLinkWrapper = ({ children, location, type }) =>\n  location === type ? <>{children}</> : <Link to={`/${type}`}>{children}</Link>;\n\nexport default React.memo(PersonLinkWrapper);\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport chatStore from \"../store/chat\";\nimport PersonLinkWrapper from \"./PersonLinkWrapper\";\nconst PersonSwitcher = () => {\n  const [chatState, setChatState] = useState(chatStore.initialState);\n  const location = useLocation().pathname.split(\"/\")[1];\n  useEffect(() => {\n    chatStore.subscribe(setChatState);\n    chatStore.init();\n  }, []);\n\n  const messageNotification = chatState.newDataCount > 0 && (\n    <span className=\"notify\">{chatState.newDataCount}</span>\n  );\n\n  return (\n    <div className=\"switcher-div\">\n      <PersonLinkWrapper location={location} type=\"first-person\">\n        <button className=\"switcher\">\n          Person1\n          {location !== \"first-person\" &&\n            location.length > 1 &&\n            messageNotification}\n        </button>\n      </PersonLinkWrapper>\n      <PersonLinkWrapper location={location} type=\"second-person\">\n        <button className=\"switcher\">\n          Person2\n          {location !== \"second-person\" && messageNotification}\n        </button>\n      </PersonLinkWrapper>\n    </div>\n  );\n};\n\nexport default React.memo(PersonSwitcher);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Person, PersonSwitcher } from \"./components\";\nimport \"./App.css\";\n\nconst firstPersion =\"first-person\"\nconst secondPersion =\"second-person\"\nconst App = () => (\n  <Router>\n    <>\n      <PersonSwitcher />\n      <Switch>\n        <Route path=\"/\" component={(props) => <Person type={firstPersion}  {...props} />} exact />\n        <Route\n          path=\"/first-person\"\n          component={(props) => <Person type={firstPersion} {...props} />}\n          exact\n        />\n        <Route\n          path=\"/second-person\"\n          component={(props) => <Person type={secondPersion} {...props} />}\n          exact\n        />\n      </Switch>\n    </>\n  </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}